// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fleaApi.Data;

#nullable disable

namespace fleaApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221101182720_AddedShopEntity")]
    partial class AddedShopEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("FleaApp_Api.Entities.GeoLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<float>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("MarketId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.HasIndex("ShopId");

                    b.ToTable("GeoLocations");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isOpen")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int>("MarketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isOpen")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarketId")
                        .IsUnique();

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.GeoLocation", b =>
                {
                    b.HasOne("FleaApp_Api.Entities.Market", null)
                        .WithMany("Points")
                        .HasForeignKey("MarketId");

                    b.HasOne("FleaApp_Api.Entities.Shop", null)
                        .WithMany("Points")
                        .HasForeignKey("ShopId");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.Shop", b =>
                {
                    b.HasOne("FleaApp_Api.Entities.Market", "Market")
                        .WithOne("Shop")
                        .HasForeignKey("FleaApp_Api.Entities.Shop", "MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.Market", b =>
                {
                    b.Navigation("Points");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("FleaApp_Api.Entities.Shop", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
